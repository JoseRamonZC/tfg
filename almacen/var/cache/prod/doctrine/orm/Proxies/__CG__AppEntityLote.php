<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Lote extends \App\Entity\Lote implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'producto', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'lote', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'cantidad', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'fechaCaducidad', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'usuarioCreado', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'fechaCreado', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'asignaciones', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'traslados', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'importaciones'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'producto', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'lote', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'cantidad', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'fechaCaducidad', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'usuarioCreado', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'fechaCreado', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'asignaciones', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'traslados', '' . "\0" . 'App\\Entity\\Lote' . "\0" . 'importaciones'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Lote $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLote(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLote', []);

        return parent::getLote();
    }

    /**
     * {@inheritDoc}
     */
    public function setLote(?string $lote): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLote', [$lote]);

        return parent::setLote($lote);
    }

    /**
     * {@inheritDoc}
     */
    public function getCantidad(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCantidad', []);

        return parent::getCantidad();
    }

    /**
     * {@inheritDoc}
     */
    public function setCantidad(?int $cantidad): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCantidad', [$cantidad]);

        return parent::setCantidad($cantidad);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaCreado(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaCreado', []);

        return parent::getFechaCreado();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaCreado(?\DateTimeInterface $fechaCreado): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaCreado', [$fechaCreado]);

        return parent::setFechaCreado($fechaCreado);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducto(): ?\App\Entity\AlmacenProducto
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducto', []);

        return parent::getProducto();
    }

    /**
     * {@inheritDoc}
     */
    public function setProducto(?\App\Entity\AlmacenProducto $producto): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProducto', [$producto]);

        return parent::setProducto($producto);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuarioCreado(): ?\App\Entity\Usuario
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuarioCreado', []);

        return parent::getUsuarioCreado();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuarioCreado(?\App\Entity\Usuario $usuarioCreado): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuarioCreado', [$usuarioCreado]);

        return parent::setUsuarioCreado($usuarioCreado);
    }

    /**
     * {@inheritDoc}
     */
    public function getAsignaciones(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAsignaciones', []);

        return parent::getAsignaciones();
    }

    /**
     * {@inheritDoc}
     */
    public function addAsignacione(\App\Entity\AsignacionLote $asignacione): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAsignacione', [$asignacione]);

        return parent::addAsignacione($asignacione);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAsignacione(\App\Entity\AsignacionLote $asignacione): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAsignacione', [$asignacione]);

        return parent::removeAsignacione($asignacione);
    }

    /**
     * {@inheritDoc}
     */
    public function getTraslados(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTraslados', []);

        return parent::getTraslados();
    }

    /**
     * {@inheritDoc}
     */
    public function addTraslado(\App\Entity\TrasladoLote $traslado): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTraslado', [$traslado]);

        return parent::addTraslado($traslado);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTraslado(\App\Entity\TrasladoLote $traslado): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTraslado', [$traslado]);

        return parent::removeTraslado($traslado);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportaciones(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportaciones', []);

        return parent::getImportaciones();
    }

    /**
     * {@inheritDoc}
     */
    public function addImportacione(\App\Entity\ImportacionLote $importacione): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImportacione', [$importacione]);

        return parent::addImportacione($importacione);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImportacione(\App\Entity\ImportacionLote $importacione): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImportacione', [$importacione]);

        return parent::removeImportacione($importacione);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaCaducidad(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaCaducidad', []);

        return parent::getFechaCaducidad();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaCaducidad(?\DateTimeInterface $fechaCaducidad): \App\Entity\Lote
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaCaducidad', [$fechaCaducidad]);

        return parent::setFechaCaducidad($fechaCaducidad);
    }

}
